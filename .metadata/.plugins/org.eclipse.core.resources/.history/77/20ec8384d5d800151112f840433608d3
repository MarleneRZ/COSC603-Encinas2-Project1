package com.COSC603.FireDanger;

import java.math.BigDecimal;

//import java.io.*; 
//import java.util.*;

// TODO: Auto-generated Javadoc
/**
 * The Class FireDanger.
 */
public class FireDanger {
	
	double precipThreshold =0.1; //.10 inches of 24hr, rainfall or less is considered a rainless day

	/** The dry. */
	//Declaring input variables:
	public 	double dry;// dry bulb temperature
	
	/** The wet. */
	public static  	double  wet;// wet bulb temperature
	
	/** The isnow. */
	private int isnow; //>0 is there is snow on the ground
	
	/** The precip. */
	private 	double  precip; //rain measure
	
	/** The wind. */
	public static  	double  wind; //current wind speed in miles per hour
	
	/** The buo. */
	private  double  buo; //last value of the buildup index
	
	/** The iherb. */
	public static  	double  iherb; //current herb state of the district 1= cured;2= transition; 3 = green
		
		//returned values:
		
		/** The df. */
		private 	double df; //drying factor
		
		/** The ffm. */
		private 	double ffm; //fine fuel moisture
		
		/** The adfm. */
		private   	double adfm; //adjusted (10 day lag) fuel moisture
		
		/** The grass. */
		private  	double  grass; //grass spread index
		
		/** The timber. */
		private 	double  timber; //timber spread index
		
		/** The fload. */
		private  	double  fload; //fire load rating (max-hour base)
		
		/** The buo2. */
		public static  	double  buo2;// build up index
		
		/**
		 * Checks if is isnow.
		 *
		 * @return true, if is isnow
		 */
		public int isIsnow() {
			return isnow;
		}
		
		/**
		 * Sets the isnow.
		 *
		 * @param isnow the new isnow
		 */
		public void setIsnow(int isnow) {
			this.isnow = isnow;
		}	
		
	
		  
		  

		
		
		
		
	/**
	 * Calculate fire danger.
	 */
	public  void calculateFireDanger() {
		// TODO Auto-generated method stub
		
		
		System.out.println("inside calculateFireDanger");
		 //if snow is positive, set all spread indexes to zero, estimates rain and adjust bui
		if (isnow > 0)
		{
			//set grass to zero, set timber to zero
			this.grass =0;
			this.timber =0;
			
			
			//if there is precipitation grater than 0.1 inch
			//BigDecimal bdPrecip = new BigDecimal(precip);
			//BigDecimal bdthreshold = new BigDecimal(0.1);
			

			if((precip -precipThreshold ) >0) 
				//precipation exceeded 0.1 inches and we reduced the buildup index 
			{
				buo = calculateBuildUpIndex();
				
			}
			else finalizeDanger();
				
		}
		
		
		
		
		//if snow is negative or zero, calculates fine fuel moisture
	}
	
	private double calculateBuildUpIndex() {
		// TODO Auto-generated method stub
		return 0;
	}

	private void finalizeDanger() {
		// TODO Auto-generated method stub
		System.out.println("IsSnow :" + isnow);
		System.out.println("Build up Index :" + buo);
		System.out.println("Precipitation :" + precip);
		
		System.out.println("Grass :" + grass);
		System.out.println("Timber :" + timber);
	}

	/**
	 * Gets the df.
	 *
	 * @return the df
	 */
	public double getDf() {
		return df;
	}
	
	/**
	 * Sets the df.
	 *
	 * @param df the new df
	 */
	public void setDf(double df) {
		this.df = df;
	}
	
	/**
	 * Gets the ffm.
	 *
	 * @return the ffm
	 */
	public double getFfm() {
		return ffm;
	}
	
	/**
	 * Sets the ffm.
	 *
	 * @param ffm the new ffm
	 */
	public void setFfm(double ffm) {
		this.ffm = ffm;
	}
	
	/**
	 * Gets the adfm.
	 *
	 * @return the adfm
	 */
	public double getAdfm() {
		return adfm;
	}
	
	/**
	 * Sets the adfm.
	 *
	 * @param adfm the new adfm
	 */
	public void setAdfm(double adfm) {
		this.adfm = adfm;
	}

	public double getFload() {
		return fload;
	}

	public void setFload(double fload) {
		this.fload = fload;
	}

	public double getGrass() {
		return grass;
	}

	public void setGrass(double grass) {
		this.grass = grass;
	}

	public double getTimber() {
		return timber;
	}

	public void setTimber(double timber) {
		this.timber = timber;
	}

	public double getPrecip() {
		return precip;
	}

	public void setPrecip(double precip) {
		this.precip = precip;
	}

	public void setBuo( double buo) {
		// TODO Auto-generated method stub
		this.buo = buo;
		
	}
	public double getBuo()
	{
		
		return buo;
	}
	
	
	
	
	

}
